// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AnyoneTradeUpdated extends ethereum.Event {
  get params(): AnyoneTradeUpdated__Params {
    return new AnyoneTradeUpdated__Params(this);
  }
}

export class AnyoneTradeUpdated__Params {
  _event: AnyoneTradeUpdated;

  constructor(event: AnyoneTradeUpdated) {
    this._event = event;
  }

  get _setToken(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _status(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }
}

export class AssetExchangeUpdated extends ethereum.Event {
  get params(): AssetExchangeUpdated__Params {
    return new AssetExchangeUpdated__Params(this);
  }
}

export class AssetExchangeUpdated__Params {
  _event: AssetExchangeUpdated;

  constructor(event: AssetExchangeUpdated) {
    this._event = event;
  }

  get _setToken(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _component(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _newExchangeName(): string {
    return this._event.parameters[2].value.toString();
  }
}

export class AssetTargetsRaised extends ethereum.Event {
  get params(): AssetTargetsRaised__Params {
    return new AssetTargetsRaised__Params(this);
  }
}

export class AssetTargetsRaised__Params {
  _event: AssetTargetsRaised;

  constructor(event: AssetTargetsRaised) {
    this._event = event;
  }

  get _setToken(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get positionMultiplier(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class CoolOffPeriodUpdated extends ethereum.Event {
  get params(): CoolOffPeriodUpdated__Params {
    return new CoolOffPeriodUpdated__Params(this);
  }
}

export class CoolOffPeriodUpdated__Params {
  _event: CoolOffPeriodUpdated;

  constructor(event: CoolOffPeriodUpdated) {
    this._event = event;
  }

  get _setToken(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _component(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _newCoolOffPeriod(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class ExchangeDataUpdated extends ethereum.Event {
  get params(): ExchangeDataUpdated__Params {
    return new ExchangeDataUpdated__Params(this);
  }
}

export class ExchangeDataUpdated__Params {
  _event: ExchangeDataUpdated;

  constructor(event: ExchangeDataUpdated) {
    this._event = event;
  }

  get _setToken(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _component(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _newExchangeData(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class RaiseTargetPercentageUpdated extends ethereum.Event {
  get params(): RaiseTargetPercentageUpdated__Params {
    return new RaiseTargetPercentageUpdated__Params(this);
  }
}

export class RaiseTargetPercentageUpdated__Params {
  _event: RaiseTargetPercentageUpdated;

  constructor(event: RaiseTargetPercentageUpdated) {
    this._event = event;
  }

  get _setToken(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _raiseTargetPercentage(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class RebalanceStarted extends ethereum.Event {
  get params(): RebalanceStarted__Params {
    return new RebalanceStarted__Params(this);
  }
}

export class RebalanceStarted__Params {
  _event: RebalanceStarted;

  constructor(event: RebalanceStarted) {
    this._event = event;
  }

  get _setToken(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get aggregateComponents(): Array<Address> {
    return this._event.parameters[1].value.toAddressArray();
  }

  get aggregateTargetUnits(): Array<BigInt> {
    return this._event.parameters[2].value.toBigIntArray();
  }

  get positionMultiplier(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class TradeExecuted extends ethereum.Event {
  get params(): TradeExecuted__Params {
    return new TradeExecuted__Params(this);
  }
}

export class TradeExecuted__Params {
  _event: TradeExecuted;

  constructor(event: TradeExecuted) {
    this._event = event;
  }

  get _setToken(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _sellComponent(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _buyComponent(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get _exchangeAdapter(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get _executor(): Address {
    return this._event.parameters[4].value.toAddress();
  }

  get _netAmountSold(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get _netAmountReceived(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get _protocolFee(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }
}

export class TradeMaximumUpdated extends ethereum.Event {
  get params(): TradeMaximumUpdated__Params {
    return new TradeMaximumUpdated__Params(this);
  }
}

export class TradeMaximumUpdated__Params {
  _event: TradeMaximumUpdated;

  constructor(event: TradeMaximumUpdated) {
    this._event = event;
  }

  get _setToken(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _component(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _newMaximum(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class TraderStatusUpdated extends ethereum.Event {
  get params(): TraderStatusUpdated__Params {
    return new TraderStatusUpdated__Params(this);
  }
}

export class TraderStatusUpdated__Params {
  _event: TraderStatusUpdated;

  constructor(event: TraderStatusUpdated) {
    this._event = event;
  }

  get _setToken(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _trader(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _status(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }
}

export class GeneralIndexModule__executionInfoResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;
  value4: string;
  value5: Bytes;

  constructor(
    value0: BigInt,
    value1: BigInt,
    value2: BigInt,
    value3: BigInt,
    value4: string,
    value5: Bytes
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromString(this.value4));
    map.set("value5", ethereum.Value.fromBytes(this.value5));
    return map;
  }
}

export class GeneralIndexModule__getComponentTradeQuantityAndDirectionResult {
  value0: boolean;
  value1: BigInt;

  constructor(value0: boolean, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromBoolean(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }
}

export class GeneralIndexModule__rebalanceInfoResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }
}

export class GeneralIndexModule extends ethereum.SmartContract {
  static bind(address: Address): GeneralIndexModule {
    return new GeneralIndexModule("GeneralIndexModule", address);
  }

  controller(): Address {
    let result = super.call("controller", "controller():(address)", []);

    return result[0].toAddress();
  }

  try_controller(): ethereum.CallResult<Address> {
    let result = super.tryCall("controller", "controller():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  executionInfo(
    param0: Address,
    param1: Address
  ): GeneralIndexModule__executionInfoResult {
    let result = super.call(
      "executionInfo",
      "executionInfo(address,address):(uint256,uint256,uint256,uint256,string,bytes)",
      [ethereum.Value.fromAddress(param0), ethereum.Value.fromAddress(param1)]
    );

    return new GeneralIndexModule__executionInfoResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toString(),
      result[5].toBytes()
    );
  }

  try_executionInfo(
    param0: Address,
    param1: Address
  ): ethereum.CallResult<GeneralIndexModule__executionInfoResult> {
    let result = super.tryCall(
      "executionInfo",
      "executionInfo(address,address):(uint256,uint256,uint256,uint256,string,bytes)",
      [ethereum.Value.fromAddress(param0), ethereum.Value.fromAddress(param1)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new GeneralIndexModule__executionInfoResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toBigInt(),
        value[4].toString(),
        value[5].toBytes()
      )
    );
  }

  getAllowedTraders(_setToken: Address): Array<Address> {
    let result = super.call(
      "getAllowedTraders",
      "getAllowedTraders(address):(address[])",
      [ethereum.Value.fromAddress(_setToken)]
    );

    return result[0].toAddressArray();
  }

  try_getAllowedTraders(
    _setToken: Address
  ): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall(
      "getAllowedTraders",
      "getAllowedTraders(address):(address[])",
      [ethereum.Value.fromAddress(_setToken)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  getComponentTradeQuantityAndDirection(
    _setToken: Address,
    _component: Address
  ): GeneralIndexModule__getComponentTradeQuantityAndDirectionResult {
    let result = super.call(
      "getComponentTradeQuantityAndDirection",
      "getComponentTradeQuantityAndDirection(address,address):(bool,uint256)",
      [
        ethereum.Value.fromAddress(_setToken),
        ethereum.Value.fromAddress(_component)
      ]
    );

    return new GeneralIndexModule__getComponentTradeQuantityAndDirectionResult(
      result[0].toBoolean(),
      result[1].toBigInt()
    );
  }

  try_getComponentTradeQuantityAndDirection(
    _setToken: Address,
    _component: Address
  ): ethereum.CallResult<
    GeneralIndexModule__getComponentTradeQuantityAndDirectionResult
  > {
    let result = super.tryCall(
      "getComponentTradeQuantityAndDirection",
      "getComponentTradeQuantityAndDirection(address,address):(bool,uint256)",
      [
        ethereum.Value.fromAddress(_setToken),
        ethereum.Value.fromAddress(_component)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new GeneralIndexModule__getComponentTradeQuantityAndDirectionResult(
        value[0].toBoolean(),
        value[1].toBigInt()
      )
    );
  }

  getIsAllowedTrader(_setToken: Address, _trader: Address): boolean {
    let result = super.call(
      "getIsAllowedTrader",
      "getIsAllowedTrader(address,address):(bool)",
      [
        ethereum.Value.fromAddress(_setToken),
        ethereum.Value.fromAddress(_trader)
      ]
    );

    return result[0].toBoolean();
  }

  try_getIsAllowedTrader(
    _setToken: Address,
    _trader: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "getIsAllowedTrader",
      "getIsAllowedTrader(address,address):(bool)",
      [
        ethereum.Value.fromAddress(_setToken),
        ethereum.Value.fromAddress(_trader)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  getRebalanceComponents(_setToken: Address): Array<Address> {
    let result = super.call(
      "getRebalanceComponents",
      "getRebalanceComponents(address):(address[])",
      [ethereum.Value.fromAddress(_setToken)]
    );

    return result[0].toAddressArray();
  }

  try_getRebalanceComponents(
    _setToken: Address
  ): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall(
      "getRebalanceComponents",
      "getRebalanceComponents(address):(address[])",
      [ethereum.Value.fromAddress(_setToken)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  permissionInfo(param0: Address): boolean {
    let result = super.call(
      "permissionInfo",
      "permissionInfo(address):(bool)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBoolean();
  }

  try_permissionInfo(param0: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "permissionInfo",
      "permissionInfo(address):(bool)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  rebalanceInfo(param0: Address): GeneralIndexModule__rebalanceInfoResult {
    let result = super.call(
      "rebalanceInfo",
      "rebalanceInfo(address):(uint256,uint256)",
      [ethereum.Value.fromAddress(param0)]
    );

    return new GeneralIndexModule__rebalanceInfoResult(
      result[0].toBigInt(),
      result[1].toBigInt()
    );
  }

  try_rebalanceInfo(
    param0: Address
  ): ethereum.CallResult<GeneralIndexModule__rebalanceInfoResult> {
    let result = super.tryCall(
      "rebalanceInfo",
      "rebalanceInfo(address):(uint256,uint256)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new GeneralIndexModule__rebalanceInfoResult(
        value[0].toBigInt(),
        value[1].toBigInt()
      )
    );
  }

  weth(): Address {
    let result = super.call("weth", "weth():(address)", []);

    return result[0].toAddress();
  }

  try_weth(): ethereum.CallResult<Address> {
    let result = super.tryCall("weth", "weth():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _controller(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _weth(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get _setToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class RaiseAssetTargetsCall extends ethereum.Call {
  get inputs(): RaiseAssetTargetsCall__Inputs {
    return new RaiseAssetTargetsCall__Inputs(this);
  }

  get outputs(): RaiseAssetTargetsCall__Outputs {
    return new RaiseAssetTargetsCall__Outputs(this);
  }
}

export class RaiseAssetTargetsCall__Inputs {
  _call: RaiseAssetTargetsCall;

  constructor(call: RaiseAssetTargetsCall) {
    this._call = call;
  }

  get _setToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RaiseAssetTargetsCall__Outputs {
  _call: RaiseAssetTargetsCall;

  constructor(call: RaiseAssetTargetsCall) {
    this._call = call;
  }
}

export class RemoveModuleCall extends ethereum.Call {
  get inputs(): RemoveModuleCall__Inputs {
    return new RemoveModuleCall__Inputs(this);
  }

  get outputs(): RemoveModuleCall__Outputs {
    return new RemoveModuleCall__Outputs(this);
  }
}

export class RemoveModuleCall__Inputs {
  _call: RemoveModuleCall;

  constructor(call: RemoveModuleCall) {
    this._call = call;
  }
}

export class RemoveModuleCall__Outputs {
  _call: RemoveModuleCall;

  constructor(call: RemoveModuleCall) {
    this._call = call;
  }
}

export class SetAnyoneTradeCall extends ethereum.Call {
  get inputs(): SetAnyoneTradeCall__Inputs {
    return new SetAnyoneTradeCall__Inputs(this);
  }

  get outputs(): SetAnyoneTradeCall__Outputs {
    return new SetAnyoneTradeCall__Outputs(this);
  }
}

export class SetAnyoneTradeCall__Inputs {
  _call: SetAnyoneTradeCall;

  constructor(call: SetAnyoneTradeCall) {
    this._call = call;
  }

  get _setToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _status(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetAnyoneTradeCall__Outputs {
  _call: SetAnyoneTradeCall;

  constructor(call: SetAnyoneTradeCall) {
    this._call = call;
  }
}

export class SetCoolOffPeriodsCall extends ethereum.Call {
  get inputs(): SetCoolOffPeriodsCall__Inputs {
    return new SetCoolOffPeriodsCall__Inputs(this);
  }

  get outputs(): SetCoolOffPeriodsCall__Outputs {
    return new SetCoolOffPeriodsCall__Outputs(this);
  }
}

export class SetCoolOffPeriodsCall__Inputs {
  _call: SetCoolOffPeriodsCall;

  constructor(call: SetCoolOffPeriodsCall) {
    this._call = call;
  }

  get _setToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _components(): Array<Address> {
    return this._call.inputValues[1].value.toAddressArray();
  }

  get _coolOffPeriods(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }
}

export class SetCoolOffPeriodsCall__Outputs {
  _call: SetCoolOffPeriodsCall;

  constructor(call: SetCoolOffPeriodsCall) {
    this._call = call;
  }
}

export class SetExchangeDataCall extends ethereum.Call {
  get inputs(): SetExchangeDataCall__Inputs {
    return new SetExchangeDataCall__Inputs(this);
  }

  get outputs(): SetExchangeDataCall__Outputs {
    return new SetExchangeDataCall__Outputs(this);
  }
}

export class SetExchangeDataCall__Inputs {
  _call: SetExchangeDataCall;

  constructor(call: SetExchangeDataCall) {
    this._call = call;
  }

  get _setToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _components(): Array<Address> {
    return this._call.inputValues[1].value.toAddressArray();
  }

  get _exchangeData(): Array<Bytes> {
    return this._call.inputValues[2].value.toBytesArray();
  }
}

export class SetExchangeDataCall__Outputs {
  _call: SetExchangeDataCall;

  constructor(call: SetExchangeDataCall) {
    this._call = call;
  }
}

export class SetExchangesCall extends ethereum.Call {
  get inputs(): SetExchangesCall__Inputs {
    return new SetExchangesCall__Inputs(this);
  }

  get outputs(): SetExchangesCall__Outputs {
    return new SetExchangesCall__Outputs(this);
  }
}

export class SetExchangesCall__Inputs {
  _call: SetExchangesCall;

  constructor(call: SetExchangesCall) {
    this._call = call;
  }

  get _setToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _components(): Array<Address> {
    return this._call.inputValues[1].value.toAddressArray();
  }

  get _exchangeNames(): Array<string> {
    return this._call.inputValues[2].value.toStringArray();
  }
}

export class SetExchangesCall__Outputs {
  _call: SetExchangesCall;

  constructor(call: SetExchangesCall) {
    this._call = call;
  }
}

export class SetRaiseTargetPercentageCall extends ethereum.Call {
  get inputs(): SetRaiseTargetPercentageCall__Inputs {
    return new SetRaiseTargetPercentageCall__Inputs(this);
  }

  get outputs(): SetRaiseTargetPercentageCall__Outputs {
    return new SetRaiseTargetPercentageCall__Outputs(this);
  }
}

export class SetRaiseTargetPercentageCall__Inputs {
  _call: SetRaiseTargetPercentageCall;

  constructor(call: SetRaiseTargetPercentageCall) {
    this._call = call;
  }

  get _setToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _raiseTargetPercentage(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SetRaiseTargetPercentageCall__Outputs {
  _call: SetRaiseTargetPercentageCall;

  constructor(call: SetRaiseTargetPercentageCall) {
    this._call = call;
  }
}

export class SetTradeMaximumsCall extends ethereum.Call {
  get inputs(): SetTradeMaximumsCall__Inputs {
    return new SetTradeMaximumsCall__Inputs(this);
  }

  get outputs(): SetTradeMaximumsCall__Outputs {
    return new SetTradeMaximumsCall__Outputs(this);
  }
}

export class SetTradeMaximumsCall__Inputs {
  _call: SetTradeMaximumsCall;

  constructor(call: SetTradeMaximumsCall) {
    this._call = call;
  }

  get _setToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _components(): Array<Address> {
    return this._call.inputValues[1].value.toAddressArray();
  }

  get _tradeMaximums(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }
}

export class SetTradeMaximumsCall__Outputs {
  _call: SetTradeMaximumsCall;

  constructor(call: SetTradeMaximumsCall) {
    this._call = call;
  }
}

export class SetTraderStatusCall extends ethereum.Call {
  get inputs(): SetTraderStatusCall__Inputs {
    return new SetTraderStatusCall__Inputs(this);
  }

  get outputs(): SetTraderStatusCall__Outputs {
    return new SetTraderStatusCall__Outputs(this);
  }
}

export class SetTraderStatusCall__Inputs {
  _call: SetTraderStatusCall;

  constructor(call: SetTraderStatusCall) {
    this._call = call;
  }

  get _setToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _traders(): Array<Address> {
    return this._call.inputValues[1].value.toAddressArray();
  }

  get _statuses(): Array<boolean> {
    return this._call.inputValues[2].value.toBooleanArray();
  }
}

export class SetTraderStatusCall__Outputs {
  _call: SetTraderStatusCall;

  constructor(call: SetTraderStatusCall) {
    this._call = call;
  }
}

export class StartRebalanceCall extends ethereum.Call {
  get inputs(): StartRebalanceCall__Inputs {
    return new StartRebalanceCall__Inputs(this);
  }

  get outputs(): StartRebalanceCall__Outputs {
    return new StartRebalanceCall__Outputs(this);
  }
}

export class StartRebalanceCall__Inputs {
  _call: StartRebalanceCall;

  constructor(call: StartRebalanceCall) {
    this._call = call;
  }

  get _setToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _newComponents(): Array<Address> {
    return this._call.inputValues[1].value.toAddressArray();
  }

  get _newComponentsTargetUnits(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }

  get _oldComponentsTargetUnits(): Array<BigInt> {
    return this._call.inputValues[3].value.toBigIntArray();
  }

  get _positionMultiplier(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }
}

export class StartRebalanceCall__Outputs {
  _call: StartRebalanceCall;

  constructor(call: StartRebalanceCall) {
    this._call = call;
  }
}

export class TradeCall extends ethereum.Call {
  get inputs(): TradeCall__Inputs {
    return new TradeCall__Inputs(this);
  }

  get outputs(): TradeCall__Outputs {
    return new TradeCall__Outputs(this);
  }
}

export class TradeCall__Inputs {
  _call: TradeCall;

  constructor(call: TradeCall) {
    this._call = call;
  }

  get _setToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _component(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _ethQuantityLimit(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class TradeCall__Outputs {
  _call: TradeCall;

  constructor(call: TradeCall) {
    this._call = call;
  }
}

export class TradeRemainingWETHCall extends ethereum.Call {
  get inputs(): TradeRemainingWETHCall__Inputs {
    return new TradeRemainingWETHCall__Inputs(this);
  }

  get outputs(): TradeRemainingWETHCall__Outputs {
    return new TradeRemainingWETHCall__Outputs(this);
  }
}

export class TradeRemainingWETHCall__Inputs {
  _call: TradeRemainingWETHCall;

  constructor(call: TradeRemainingWETHCall) {
    this._call = call;
  }

  get _setToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _component(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _minComponentReceived(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class TradeRemainingWETHCall__Outputs {
  _call: TradeRemainingWETHCall;

  constructor(call: TradeRemainingWETHCall) {
    this._call = call;
  }
}
